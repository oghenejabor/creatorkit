
import { getPolicy } from '@/lib/policy-service';
import type { Metadata } from 'next';
import { notFound } from 'next/navigation';
import { AdPlaceholder } from '@/components/common/ad-placeholder';
import React from 'react';
import Link from 'next/link';

type Props = {
  params: { policyId: string };
};

export async function generateMetadata({ params }: Props): Promise<Metadata> {
  const policyData = await getPolicy(params.policyId);

  if (!policyData) {
    return {
      title: 'Document Not Found',
    };
  }
  
  const documentTitle = policyData.type === 'privacyPolicy' ? 'Privacy Policy' : 'Terms & Conditions';

  return {
    title: documentTitle,
    description: `${documentTitle} generated by CreatorKit AI.`,
  };
}

export default async function GeneratedPolicyPage({ params }: Props) {
  const policyData = await getPolicy(params.policyId);

  if (!policyData) {
    notFound();
  }

  const { content, type } = policyData;
  const documentTitle = type === 'privacyPolicy' ? 'Privacy Policy' : 'Terms & Conditions';

  const paragraphs = content.split('\n\n').filter(p => p.trim() !== '');

  // Calculate positions for 2 additional ads, distributed evenly.
  const adPositions = [
    Math.floor(paragraphs.length / 3),
    Math.floor((paragraphs.length * 2) / 3),
  ].filter((pos, index, self) => pos > 0 && self.indexOf(pos) === index); // Ensure unique positions and not at the very top.


  return (
    <main className="py-12 px-4 sm:px-6 lg:px-8">
      <div className="mx-auto max-w-4xl">
        <header className="mb-10 text-center">
            <h1 className="font-headline text-4xl font-bold">{documentTitle}</h1>
            <p className="text-muted-foreground mt-2">Generated by CreatorKit AI</p>
        </header>
        <div className="mb-8">
          <AdPlaceholder adKey="global-ad-script" /> {/* Ad 1 */}
        </div>
        <div className="prose prose-lg max-w-none text-foreground prose-headings:text-foreground prose-a:text-primary dark:prose-invert">
          {paragraphs.map((p, index) => (
            <React.Fragment key={index}>
              <div dangerouslySetInnerHTML={{ __html: p.replace(/\n/g, '<br />').replace(/<a/g, '<a target="_blank" rel="noopener noreferrer"') }} />
              {adPositions.includes(index) && (
                <div className="my-8 not-prose">
                  <AdPlaceholder adKey="global-ad-script" />
                </div>
              )}
            </React.Fragment>
          ))}
        </div>
      </div>
      <footer className="mt-16 border-t pt-8 text-center text-sm text-muted-foreground">
        <p>
          Document hosted & Generated by{' '}
          <Link href="/" className="font-medium text-primary hover:underline">
            CreatorKit AI
          </Link>
          {' • '}
          <Link href="/privacy-policy" className="hover:underline">
            Privacy Policy
          </Link>
          {' • '}
          <Link href="/cookie-policy" className="hover:underline">
            Cookie Policy
          </Link>
          {' • '}
          <Link href="/terms-and-conditions" className="hover:underline">
            Terms of Use
          </Link>
        </p>
      </footer>
    </main>
  );
}
